{
"version":3,
"file":"kiniita.js",
"sourceRoot":"file:///",
"sources":["/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/Main.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx","/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/utils/Fn.hx","/usr/local/lib/haxe/std/js/_std/Std.hx"],
"sourcesContent":["import mz.Globals.GameVariables;\nimport js.Syntax;\nimport js.html.Window;\nimport js.lib.Function;\nimport mz.scenes.Scene_Base;\nimport utils.Fn;\nimport utils.Comment;\nimport macros.MacroTools;\n\nclass Main {\n\n  public static function main() {\n    MacroTools.includeJsLib(\"libs/test.js\");\n    Comment.singleLine(MacroTools.generateBuildDate());\n    Comment.title(\"Kiniitta\");\n    Comment.pluginParams(\"@author Kino \n    @plugindesc This plugin allows you to use Haxe in your RPGMakerMV code.\n    @param haxeVersion\");\n    Comment.singleLine(\"This is a test of the watcher\");\n    var sceneTitleStart:Function = Fn.getPrProp(Scene_Base, \"start\");\n     Fn.setPrProp(Scene_Base, \"start\", () -> {\n      var self:Scene_Base = Fn.self;\n      sceneTitleStart.call(self);\n      GameVariables.setValue(1, 3);\n      Fn.setField(Window, \"Haxe\", \"Version 4.2.0\");\n      trace(\"Running Console Log From Haxe Added haxe Version\");\n    });\n  }\n  \n}","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","package utils;\nimport haxe.macro.Type.ClassType;\nimport js.Syntax;\nimport js.lib.Object;\nimport core.AnyBox.TBox;\nimport Type;\n\ntypedef Self=String;\n\nclass Fn {\n\n  public static var self(get, null):Any;\n  /**\n   * Wrapper for JavaScript this\n   */\n  private static inline function get_self() {\n    return Syntax.code(\"this\");\n  }\n\n  @:keep\n  public static inline function proto<T>(obj:Class<T>):TBox<T> {\n    return Syntax.field(obj, \"prototype\");\n  }\n\n  public static inline function setPrProp(obj:Any, fieldName:String, value:Any) {\n    Syntax.code(\"{0}.{1} = {2}\", proto(obj), Syntax.plainCode(fieldName), value);\n  }\n\n  public static inline function setPrPropVoidFn(obj:Any, fieldName:String, value:(Any) -> Void) {\n    Syntax.code(\"{0}.{1} = {2}\", proto(obj), Syntax.plainCode(fieldName), value);\n  }\n\n  public static inline function getPrProp(obj:Any, fieldName:String):Any {\n    return Syntax.code(\"{0}.{1}\", proto(obj), Syntax.plainCode(fieldName));\n  }\n\n  @:analyzer(local_dce)\n  public static inline function setField(obj:Any, fieldName:String, value:Any) {\n    return Syntax.code(\"{0} = {1}\",Syntax.field(obj, fieldName), value);\n  }\n\n  /**\n   * Gets an element using an array syntax.\n   * @param obj \n   * @param fieldName \n   */\n  public static inline function getByArrSyntax(obj:Any, fieldName:String) {\n    return Syntax.code(\"{0}[{1}]\", obj, fieldName);\n  }\n\n  /**\n   * Invokes the standard JavaScript defineProperty functionality to the value\n   * @param obj \n   * @param propName \n   * @param value \n   * @return T\n   */\n  public static  function setProp<T:{}>(obj:T, propName:String, value:Any):T {\n    return Object.defineProperty(obj,propName,{value: value});\n  }\n\n  public static inline function setProtoProp(obj, propName, value) {\n\t\treturn Syntax.code(\"{0}.prototype[{1}] = {2}\", obj, propName, value);\n\t}\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n"],
"names":[],
"mappings":";;;;;;eAWgC;AAAA,EAE5B;AAF4B,EAG5B;AAAA;AAAA;AAAA;AAAA;AAH4B,EAI5B;AAAA;AAAA;AAAA;AAAA;AAJ4B,EAO5B;AAP4B,EAQ5B,sBAA+B,AAAa,qBAAb;AARH,EAS3B,AAAa,qBAAb,QAAkC,WAAM;AAAA,GACvC,WAAsB;AADiB,GAEvC,qBAAqB;AAFkB,GAGvC,wBAAuB,EAAG;AAHa,GAIvC,AAAY,cAAgB;AAJW,GAKvC,8BAAM;AALiC;AATb;;;oBCgBhC;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;;mBC/BE;AAAA,SAAO,AAAa;AAApB;;ACwDM;AAAA;;;;"
}