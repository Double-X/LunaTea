{
"version":3,
"file":"kiniita.js",
"sourceRoot":"file:///",
"sources":["/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/Main.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["import core.TestScene;\nimport mz.scenes.Scene_Title;\nimport mz.scenes.Scene_Base;\nimport utils.Fn;\nimport utils.Comment;\nimport macros.FnMacros;\nclass Main {\n\n  public static function main() {\n    var titlePrototype =  Fn.prototype(Scene_Base);   // var testScene = new TestScene();\n    var abc = {hello:\"Hello World\", test:3};\n    Fn.setField(abc, \"Yes\", 3);\n    trace(abc);\n    var SceneBaseFn = Fn.setPrProp(Scene_Base, \"Yes\", () -> {\n      trace(\"Hello\");\n    });\n\n    var result = FnMacros.pipe(\n      3 + 3,\n      _ + 3,\n      2 + _,\n      _ + 4\n    );\n    trace(result);\n\n    Comment.singleLine(\"Hello World\");\n    Comment.multiLine(\n     \"Multiline Haxe Comment\n     NiceJob\"\n    );\n    Comment.multiLine(\"Does this still work in JavaScript?\n    I hope it continues to work.\");\n  }\n}","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;;eAQgC;AAAA,EACN,AAAa;AADP,EAE5B,UAAU,UAAO,sBAAoB;AAFT,EAG5B,AAAY,UAAY;AAHI,EAI5B,8BAAM;AAJsB,EAKV,AAAa,qBAAb,MAAgC,WAChD;AAAA,iCAAM;AAAN;AAN0B,EAe5B,8BAAM;AAfsB,EAiB5B;AAjB4B,EAkB5B;AAAA;AAAA;AAAA;AAlB4B,EAsB5B;AAAA;AAAA;AAAA;AAtB4B;;;oBCmBhC;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;;;"
}