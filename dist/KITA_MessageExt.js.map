{
"version":3,
"file":"KITA_MessageExt.js",
"sourceRoot":"file:///",
"sources":["/usr/local/lib/haxe/std/js/_std/Std.hx","/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/core/Amaryllis.hx","/usr/local/lib/haxe/std/haxe/Log.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx","/usr/local/lib/haxe/std/js/Boot.hx","/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/nodes/SpriteBust.hx","/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/plugins/KITA_MessageExt.hx","/Users/kinor/Documents/development/game-dev/kino-creates/kiniitta/src/utils/Fn.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n","package core;\n\nimport utils.Fn;\nimport mz.windows.Window_Base;\nimport haxe.Json;\nimport haxe.Constraints.Function;\nimport mz.managers.ImageManager;\nimport mz.managers.SceneManager;\nimport pixi.interaction.EventEmitter;\nimport mz.core.Utils;\n\nusing Lambda;\n\nfinal VERSION = '1.0.0';\nfinal MZ_NAME = Utils.RPGMAKER_NAME;\nfinal MZ_VERSION = Utils.RPGMAKER_VERSION;\n\ninline function createEventEmitter() {\n\treturn new EventEmitter();\n}\n\ninline function createDie(sides:Int):Die {\n\treturn new Die(sides);\n}\n\n/**\n * Returns plugin parameters using regular expression matching\n * on plugin description\n * @param regEx\n */\nfunction getParams(regEx:EReg) {}\n\n/**\n * Applies Linear Interpolation to the variable provided\n * @param start\n * @param end\n * @param amount\n * @return {Float}\n */\nfunction lerp(start:Float, end:Float, amount:Float):Float {\n\treturn start + ((end - start) * amount);\n}\n\n/**\n * Returns the current SceneManager._scene.\n * @returns {Scene}\n */\ninline function currentScene() {\n\treturn SceneManager.curretScene;\n}\n\ninline function isImagePath(path:String) {\n\treturn path.split(\"/\").length > 2 ? true : false;\n}\n\ninline function loadImage(path:String, hue:Int = 0) {\n\treturn isImagePath(path) ? ImageManager.loadNormalBitmap(path + \".png\", hue) : null;\n}\n\n/**\n * Returns true if the game is running on desktop(nwjs).\n * @returns {boolean}\n */\ninline function isNwjs() {\n\treturn Utils.isNwjs();\n}\n\n/**\n * Returns true if the game is running on mobile.\n * @returns{boolean}\n */\ninline function isMobile() {\n\treturn Utils.isMobileDevice();\n}\n\n/**\n * Returns true if the game is in test mode.\n * @returns {boolean}\n */\ninline function isTest() {\n\treturn Utils.isOptionValid(\"test\");\n}\n\n/**\n * Creates a function that only be run once.\n * @param {Function} f\n * @returns {Function}\n */\nfunction once(f:Function) {\n\tvar count = 0;\n\treturn function() {\n\t\tif (count > 0)\n\t\t\treturn null;\n\t\telse {\n\t\t\tcount++;\n\t\t\treturn f();\n\t\t}\n\t};\n}\n\n/**\n * Repeats the code a set number of times\n * similar to a for loop.\n * @param {number} iterations\n * @param {Function} f\n */\nfunction times(iterations:Int, f:Function) {\n\tfor (i in 0...iterations) {\n\t\tf();\n\t}\n}\n\nfunction safeParse(string:String) {\n\ttry {\n\t\treturn Json.parse(string);\n\t} catch (err) {\n\t\treturn err;\n\t}\n}\n\n/**\n * Returns a number based on the game's default lineHeight.\n * @param {number} number\n * @returns {number}\n */\ninline function lines(num:Int) {\n\treturn Fn.proto(Window_Base).lineHeight() * num;\n}\n\n/**\n * Returns rgb as a css hex string.\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @returns {string}\n */\ninline function rgbToHex(red:Int, green:Int, blue:Int) {\n\tfinal hex = pixi.core.utils.Utils.rgb2hex([red, green, blue]);\n\treturn pixi.core.utils.Utils.hex2string(hex);\n}\n\n/**\n * Returns a rgb in css format string.\n * @param {Int} red\n * @param {Int} green\n * @param {Int} blue\n * @returns {string}\n */\ninline function rgbToCss(red:Int, green:Int, blue:Int) {\n\treturn Utils.rgbToCssColor(red, green, blue);\n}\n\n/**\n * Clears an array of all values.\n * @param {Array<Any>} array\n */\ninline function clear(array:Array<Any>) {\n\tarray.resize(0);\n\treturn array;\n}\n\n/**\n * Takes a set amount of elements from the start of an array.\n \t\t * Doesn't modify the original array.\n * @param {number} amount\n * @param {any[]} list\n * @returns {any[]}\n */\ninline function take(amount:Int, list:Array<Any>) {\n\treturn list.slice(0, amount);\n}\n\n/**\n * Takes a set amount of elements from the end of an array.\n * Doesn't modify the original array.\n * @param {number} amount\n * @param {any[]} list\n * @returns {any[]}\n */\ninline function drop(amount:Int, list:Array<Any>) {\n\treturn list.slice(amount * -1);\n}\n\ninline function arrayEquals(arr1: Array<Any>, arr2: Array<Any>) {\n\treturn arr1.length == arr2.length &&\n\t\t!arr1.has((el, index) -> el != arr2[index]);\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tLog primarily provides the `trace()` method, which is invoked upon a call to\n\t`trace()` in Haxe code.\n**/\nclass Log {\n\t/**\n\t\tFormat the output of `trace` before printing it.\n\t**/\n\tpublic static function formatOutput(v:Dynamic, infos:PosInfos):String {\n\t\tvar str = Std.string(v);\n\t\tif (infos == null)\n\t\t\treturn str;\n\t\tvar pstr = infos.fileName + \":\" + infos.lineNumber;\n\t\tif (infos.customParams != null)\n\t\t\tfor (v in infos.customParams)\n\t\t\t\tstr += \", \" + Std.string(v);\n\t\treturn pstr + \": \" + str;\n\t}\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the `trace()` call was made.\n\n\t\tThis method can be rebound to a custom function:\n\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v, ?infos) {\n\t\t\t  // handle trace\n\t\t\t}\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to `trace()` will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace(v:Dynamic, ?infos:PosInfos):Void {\n\t\tvar str = formatOutput(v, infos);\n\t\t#if js\n\t\tif (js.Syntax.typeof(untyped console) != \"undefined\" && (untyped console).log != null)\n\t\t\t(untyped console).log(str);\n\t\t#elseif lua\n\t\tuntyped __define_feature__(\"use._hx_print\", _hx_print(str));\n\t\t#elseif sys\n\t\tSys.println(str);\n\t\t#else\n\t\tthrow \"Not implemented\"\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport js.Syntax; // import it here so it's always available in the compiler\n\n@:dox(hide)\nclass Boot {\n\tstatic inline function isClass(o:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isInterface(o:Class<Dynamic>):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isInterface\", o.__isInterface__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\t@:pure static function getClass(o:Null<Dynamic>):Null<Dynamic> {\n\t\tif (o == null) {\n\t\t\treturn null;\n\t\t} else if (Std.isOfType(o, Array)) {\n\t\t\treturn Array;\n\t\t} else {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o, s:String) {\n\t\tuntyped {\n\t\t\tif (o == null)\n\t\t\t\treturn \"null\";\n\t\t\tif (s.length >= 5)\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = js.Syntax.typeof(o);\n\t\t\tif (t == \"function\" && (isClass(o) || isEnum(o)))\n\t\t\t\tt = \"object\";\n\t\t\tswitch (t) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\t#if !js_enums_as_arrays\n\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\n\t\t\t\t\t\tvar con = e.__constructs__[o._hx_index];\n\t\t\t\t\t\tvar n = con._hx_name;\n\t\t\t\t\t\tif (con.__params__) {\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\treturn n + \"(\" + [for (p in (con.__params__ : Array<String>)) __string_rec(o[p], s)].join(\",\") + \")\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t#end\n\t\t\t\t\tif (js.Syntax.instanceof(o, Array)) {\n\t\t\t\t\t\t#if js_enums_as_arrays\n\t\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\t\tif (o.length == 2)\n\t\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\t\tvar str = o[0] + \"(\";\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\tfor (i in 2...o.length) {\n\t\t\t\t\t\t\t\tif (i != 2)\n\t\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i], s);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstr += __string_rec(o[i], s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t\t});\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor (i in 0...o.length)\n\t\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\") + __string_rec(o[i], s);\n\t\t\t\t\t\tstr += \"]\";\n\t\t\t\t\t\treturn str;\n\t\t\t\t\t}\n\t\t\t\t\tvar tostr;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t// strange error on IE\n\t\t\t\t\t\treturn \"???\";\n\t\t\t\t\t}\n\t\t\t\t\tif (tostr != null && tostr != js.Syntax.code(\"Object.toString\") && js.Syntax.typeof(tostr) == \"function\") {\n\t\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\t\tif (s2 != \"[object Object]\")\n\t\t\t\t\t\t\treturn s2;\n\t\t\t\t\t}\n\t\t\t\t\tvar str = \"{\\n\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t\tvar k:String = null;\n\t\t\t\t\tjs.Syntax.code(\"for( {0} in {1} ) {\", k, o);\n\t\t\t\t\tif (hasp && !o.hasOwnProperty(k))\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\n\t\t\t\t\tif (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\")\n\t\t\t\t\t\tjs.Syntax.code(\"continue\");\n\t\t\t\t\tif (str.length != 2)\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \" + __string_rec(o[k], s);\n\t\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t\t\ts = s.substring(1);\n\t\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\t\treturn str;\n\t\t\t\tcase \"function\":\n\t\t\t\t\treturn \"<function>\";\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn o;\n\t\t\t\tdefault:\n\t\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\t@:pure private static function __interfLoop(cc:Dynamic, cl:Dynamic) {\n\t\tif (cc == null)\n\t\t\treturn false;\n\t\tif (cc == cl)\n\t\t\treturn true;\n\t\tvar intf:Dynamic = cc.__interfaces__;\n\t\tif (intf != null\n\t\t\t// ES6 classes inherit statics, so we want to avoid accessing inherited `__interfaces__`\n\t\t\t#if (js_es >= 6) && (cc.__super__ == null || cc.__super__.__interfaces__ != intf) #end\n\t\t) {\n\t\t\tfor (i in 0...intf.length) {\n\t\t\t\tvar i:Dynamic = intf[i];\n\t\t\t\tif (i == cl || __interfLoop(i, cl))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn __interfLoop(cc.__super__, cl);\n\t}\n\n\t@:pure private static function __instanceof(o:Dynamic, cl:Dynamic) {\n\t\tif (cl == null)\n\t\t\treturn false;\n\t\tswitch (cl) {\n\t\t\tcase Int:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\" && js.Syntax.strictEq(o | 0, o);\n\t\t\tcase Float:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\";\n\t\t\tcase Bool:\n\t\t\t\treturn js.Syntax.typeof(o) == \"boolean\";\n\t\t\tcase String:\n\t\t\t\treturn js.Syntax.typeof(o) == \"string\";\n\t\t\tcase Array:\n\t\t\t\treturn js.Syntax.instanceof(o, Array) #if js_enums_as_arrays && o.__enum__ == null #end;\n\t\t\tcase Dynamic:\n\t\t\t\treturn o != null;\n\t\t\tdefault:\n\t\t\t\tif (o != null) {\n\t\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\t\tif (js.Syntax.typeof(cl) == \"function\") {\n\t\t\t\t\t\tif (__downcastCheck(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (js.Syntax.typeof(cl) == \"object\" && __isNativeObj(cl)) {\n\t\t\t\t\t\tif (js.Syntax.instanceof(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// do not use isClass/isEnum here\n\t\t\t\tuntyped __feature__(\"Class.*\", if (cl == Class && o.__name__ != null) return true);\n\t\t\t\tuntyped __feature__(\"Enum.*\", if (cl == Enum && o.__ename__ != null) return true);\n\t\t\t\t#if js_enums_as_arrays\n\t\t\t\treturn o.__enum__ == cl;\n\t\t\t\t#else\n\t\t\t\treturn untyped __feature__(\n\t\t\t\t\t\"has_enum\",\n\t\t\t\t\tif (o.__enum__ != null) ($hxEnums[o.__enum__]) == cl else false,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\t#end\n\t\t}\n\t}\n\n\tstatic function __downcastCheck(o:Dynamic, cl:Class<Dynamic>):Bool {\n\t\treturn js.Syntax.instanceof(o, cl) || (isInterface(cl) && inline __implements(o, cl));\n\t}\n\n\tstatic function __implements(o:Dynamic, iface:Class<Dynamic>):Bool {\n\t\treturn __interfLoop(getClass(o), iface);\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o:Dynamic, t:Dynamic) {\n\t\tif (o == null || __instanceof(o, t))\n\t\t\treturn o;\n\t\telse\n\t\t\tthrow \"Cannot cast \" + Std.string(o) + \" to \" + Std.string(t);\n\t}\n\n\tstatic var __toStr:js.lib.Function;\n\n\tstatic function __init__() {\n\t\tBoot.__toStr = (cast {}).toString;\n\t}\n\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name:String = __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn js.Lib.global[cast name];\n\t}\n}\n","package nodes;\n\nimport mz.core.Bitmap;\nimport mz.sprites.Sprite_Base;\nimport core.Amaryllis;\n\nenum MoveType {\n  Linear;\n  //Add More Later\n}\n@:keep\nclass SpriteBust extends Sprite_Base {\n  private var _shadowOpacity:Float;\n  private var _shadowX:Float;\n  private var _shadowY:Float;\n  private var _fadeDuration:Int;\n  private var _scaleDuration:Int;\n  private var _defaultMoveType:MoveType;\n  private var _moveWait:Int;\n\n  public function new(x:Int, y:Int, ?bitmap:Bitmap) {\n    super();\n    this.bitmap = bitmap;\n    trace(bitmap);\n    this.x = x;\n    this.y = y;\n    this._moveWait = 30;\n  }\n\n  override public function initialize():Void {\n    super.initialize();\n    this._fadeDuration = 0;\n    this._shadowOpacity = this.alpha;\n    this._shadowX = this.x;\n    this._shadowY = this.y;\n    this._defaultMoveType = Linear;\n  }\n  //TODO: Replace with proper Some/None\n  public function moveTo(x:Int, ?y:Int) {\n    this._shadowX = x;\n    if(y != null) \n      this._shadowY = y;\n    this._moveWait = 30;\n    trace(\"Starting Move\", this._moveWait);\n  }\n\n  public function moveBy(x:Int, ?y:Int) {\n    this._shadowX+= x;\n    if(y != null)\n      this._shadowY +=y;\n    this._moveWait = 30;\n  }\n\n  public function fadeTo(opacity:Float, duration:Int=30) {\n    this._shadowOpacity = opacity;\n    this._fadeDuration = duration;\n\n  }\n\n  public function fadeBy(opacity:Float, duration:Int=30) {\n    this._shadowOpacity += opacity;\n    this._fadeDuration = duration;\n  }\n\n  public function scaleTo(x:Int, ?y:Int, ?duration:Int=30) {\n    this.scale.set(x, y);\n    this._scaleDuration = duration;\n  }\n\n  //Add update function to sprite_base\n  public override function update() {\n    super.update();\n    this.updateFade();\n    this.updateScaling();\n    if(this._moveWait == 0) {\n      this.updateMovement();\n    } \n    if (this._moveWait > 0){\n      this._moveWait--;\n    }\n  }\n\n  public function updateFade() {\n\n  }\n\n  public function updateScaling() {\n\n  }\n\n  public function updateMovement() {\n    var xResult = this.x;\n    var yResult = this.y;\n    switch(this._defaultMoveType) {\n      case Linear:\n        if(this._shadowX != this.x) {\n          xResult = lerp(this.x, this._shadowX, 0.025);\n        }\n    \n        if(this._shadowY != this.y) {\n          yResult = lerp(this.y, this._shadowY, 0.025);\n        }\n      case _:\n        //Do nothing\n    }\n    if(this._shadowX == this.x && this._shadowY == this.y) {\n      //Disable Movement When matching\n      this._moveWait = -1;\n      trace(\"Disable Moving\");\n    }\n    var xDiff = Math.abs(this._shadowX - this.x);\n    var yDiff = Math.abs(this._shadowY - this.y);\n    if(xDiff < 0.5) xResult = Math.round(xResult);\n    if(yDiff < 0.5) yResult = Math.round(yResult);\n    this.move(xResult, yResult);\n    trace(\"Moving\", this.x, this.y);\n    this._refresh();\n  }\n\n}","package plugins;\n\n\nimport mz.core.Bitmap;\nimport nodes.SpriteBust;\nimport mz.managers.PluginManager;\nimport utils.Fn;\nimport utils.Comment;\nimport mz.windows.Window_Message;\nimport mz.sprites.Sprite_Base;\nusing core.StringExtensions;\nimport macros.MacroTools;\n\nusing Std;\n\nvar textSpeed:Int = 2;\nfinal img = new Bitmap(128, 128);\nfinal MSGBUST = new SpriteBust(0, 0, img);\n\nfunction main() {\n\ttrace(Sprite_Base);\n\tComment.pluginParams(\"\n   @author Kino\n   @plugindesc An extension to the core Message Window functionality\n   to support Visual Novels <KITA_MessageExt>.\n\n   @param Text Speed \n   @desc The speed at which characters will be rendered\n   @default 2\n   \n   @help\n   Version: 1.00\n   Version Log:\n   Now you can change the text speed at will using escape characters\n   inside the window.\n   Example: \\\\TS[30] updates the text speed to super slow 30.\n   Note: The [30] will appear in the editor, but not in game.\n\n   Instructions:\n   You set your text speed in the plugin menu.\n   This is the speed that the characters will be drawn at.\n\n   Contact me via forums; username: Kino.\n   Hope this plugin helps and enjoy!\n   \");\n\n\tvar parameters:Any = PluginManager.parameters(\"KITA_MessageExt\");\n\ttextSpeed = Fn.getByArrSyntax(parameters, \"Text Speed\");\n\ttrace(textSpeed);\n  MacroTools.debug(\"This is a test commnet\");\n  \n  var KitaWnMsg = Fn.renameClass(Window_Message, KitaWindowMessage);\n}\n\nfunction setTextSpeed(value:Int) {\n\ttextSpeed = value;\n}\n\nclass KitaWindowMessage extends Window_Message {\n\tpublic var activeTextSpeed:Int;\n\tpublic var originalTextSpeed:Int;\n\tpublic var msgBust:SpriteBust;\n\n\tpublic function new(x, y, width, height) {\n\t\tsuper(x, y, width, height);\n\t\tthis.originalTextSpeed = textSpeed;\n\t\tthis.activeTextSpeed = textSpeed;\n\t\tthis.msgBust = MSGBUST;\n\t\timg.fillRect(0, 0, 128, 128, \"black\");\n\t\tthis.msgBust.move(0, -128);\n\t\tthis.addChild(this.msgBust);\n\t\tthis.msgBust.show();\n\t}\n\n\tpublic function updateTextSpeed(value) {\n\t\tthis.activeTextSpeed = value;\n\t}\n\n\tpublic override function processEscapeCharacter(code:String, textState:String) {\n\t\tswitch (code) {\n\t\t\tcase '$':\n\t\t\t\tthis._goldWindow.open();\n\t\t\tcase '.':\n\t\t\t\tthis.startWait(15);\n\t\t\tcase '!':\n\t\t\t\tthis.startPause();\n\n\t\t\tcase '>':\n\t\t\t\tthis._lineShowFast = true;\n\n\t\t\tcase '<':\n\t\t\t\tthis._lineShowFast = false;\n\n\t\t\tcase '^':\n\t\t\t\tthis._pauseSkip = true;\n\n\t\t\tcase 'TS':\n\t\t\t\tthis.updateTextSpeed(this.obtainEscapeParam(textState).int());\n\t\t\tcase _:\n\t\t\t\tsuper.processEscapeCharacter(code, textState);\n\t\t}\n\t}\n\n\tpublic override function processNormalCharacter(textState:String) {\n\t\tsuper.processNormalCharacter(textState);\n\t\tthis.startWait(this.activeTextSpeed);\n\t}\n\n\tpublic override function terminateMessage() {\n\t\tthis.activeTextSpeed = this.originalTextSpeed;\n\t\tsuper.terminateMessage();\n\t}\n}\n","package utils;\nimport haxe.macro.Type.ClassType;\nimport js.Syntax;\nimport js.lib.Object;\nimport core.AnyBox.TBox;\nimport Type;\n\ntypedef Self=String;\n\nclass Fn {\n\n  public static var self(get, null):Any;\n  /**\n   * Wrapper for JavaScript this\n   */\n  private static inline function get_self() {\n    return Syntax.code(\"this\");\n  }\n\n  @:keep\n  public static inline function proto<T>(obj:Class<T>):TBox<T> {\n    return Syntax.field(obj, \"prototype\");\n  }\n\n  public static inline function setPrProp(obj:Any, fieldName:String, value:Any) {\n    Syntax.code(\"{0}.{1} = {2}\", proto(obj), Syntax.plainCode(fieldName), value);\n  }\n\n  public static inline function setPrPropVoidFn(obj:Any, fieldName:String, value:(Any) -> Void) {\n    Syntax.code(\"{0}.{1} = {2}\", proto(obj), Syntax.plainCode(fieldName), value);\n  }\n\n  public static inline function getPrProp(obj:Any, fieldName:String):Any {\n    return Syntax.code(\"{0}.{1}\", proto(obj), Syntax.plainCode(fieldName));\n  }\n\n  @:analyzer(local_dce)\n  public static inline function setField(obj:Any, fieldName:String, value:Any) {\n    return Syntax.code(\"{0} = {1}\",Syntax.field(obj, fieldName), value);\n  }\n\n  /**\n   * Gets an element using an array syntax.\n   * @param obj \n   * @param fieldName \n   */\n  public static inline function getByArrSyntax(obj:Any, fieldName:String) {\n    return Syntax.code(\"{0}[{1}]\", obj, fieldName);\n  }\n\n  public static inline function renameClass<T>(obj:Any, obj2:T):T {\n    return Syntax.code(\"{0} = {1}\", obj, obj2);\n  }\n\n  /**\n   * Invokes the standard JavaScript defineProperty functionality to the value\n   * @param obj \n   * @param propName \n   * @param value \n   * @return T\n   */\n  public static  function setProp<T:{}>(obj:T, propName:String, value:Any):T {\n    return Object.defineProperty(obj,propName,{value: value});\n  }\n\n  public static inline function setProtoProp(obj, propName, value) {\n\t\treturn Syntax.code(\"{0}.prototype[{1}] = {2}\", obj, propName, value);\n\t}\n}"],
"names":[],
"mappings":"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"
}